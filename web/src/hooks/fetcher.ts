import createClient from "openapi-fetch";
import { createQueryHook } from "swr-openapi";
import createRQ from "openapi-react-query";
import type { paths } from "../../openapi"; // generated by openapi-typescript

export const backend = process.env.NODE_ENV === "production" ? "" : "http://localhost:4000"

export const fetcher: typeof fetch = (input, ...args) => fetch(backend + input, ...args).then(res => res.json())

const client = createClient<paths>({
    baseUrl: backend,
});

export const api = createRQ(client);

export const useQuery = createQueryHook(client, "my-api");

export const options = {
    revalidateOnFocus: false,
    // revalidateOnMount:false,
    shouldRetryOnError: false,
    revalidateOnReconnect: false,
    refreshWhenOffline: false,
    refreshWhenHidden: false,
    refreshInterval: 0,
};